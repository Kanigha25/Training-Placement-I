import collections

class Solution(object):
    def findSubstring(self, s, words):
        """
        :type s: str
        :type words: List[str]
        :rtype: List[int]
        """
        if not words or not s:
            return []

       
        counter = collections.Counter(words)
        wordLen = len(words[0])
        totalWordLen = wordLen * len(words)
        
        result = []
        
        for i in range(wordLen):
           
            sub = s[i : i + totalWordLen]
            
            
            subCounter = collections.Counter(
                [sub[j : j + wordLen] for j in range(0, len(sub), wordLen)])
            
            
            if counter == subCounter:
                result.append(i)
                
            
            for j in range(i + wordLen, len(s) - totalWordLen + 1, wordLen):
                oldJ = j - wordLen
                
                
                subCounter[s[oldJ : j]] -= 1
                if subCounter[s[oldJ : j]] == 0:
                    
                    del subCounter[s[oldJ : j]]
                     
                subCounter[s[oldJ + totalWordLen : j + totalWordLen]] += 1
                
                if counter == subCounter:
                    result.append(j)
        
        return result
